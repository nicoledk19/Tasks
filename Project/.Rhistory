plot(Z, Species$Head.Width, xlab="", ylab="head width", xaxt="n")
axis(1, at=c(2,3,4), labels=c("HC", "NB", "PF"))
mtext(i, side=3, line=1.5)
boxplot(Species$Head.Width~X, add=T, at=c(2,3,4), boxwex=0.25, col=c(rgb(0,1,0,0.5), rgb(0,0,1,0.5), rgb(1,0,0,0.5)))
dev.off()
}
X <- aov(Head.Width ~ Species + Task, data=Data1)
X <- aov(Head.Width ~ Species + Task, data=Data1)
X
summary(X)
interaction <- aov(Head.Width ~ Species + Task, data=Data1)
interaction <- aov(Head.Width ~ Species * Task, data=Data1)
block<-aov(Head.Width ~ Species * Task + block, data=Data1)
block<-aov(Head.Width ~ Species * Task + Species, data=Data1)
summary(X)
summary(interaction)
summary(block)
library(AICcmodavg)
install.packages(AICcmodavg)
install.packages("AICcmodavg")
library(AICcmodavg)
model.set<-list(X, interaction)
model.names<-c("X", "interaction")
aictab(model.set, modnames=model.names)
#interaction of species and task has the best fit line so we will use that test to continue.
summary(interaction)
summary(X)
TukeyHSD(interaction)
TukeyHSD(X)
TukeyHSD(intervention)
TukeyHSD(interaction)
plot(AnolisTree, cex=0.25)
plot(AnolisTree,show.tip.label=FALSE, type=c("radial"), edge.color=eCols)
tipEdges
eCols<-rep("black", 81)
(eCols[tipEdges]="red")
plot(AnolisTree,show.tip.label=FALSE, type=c("radial"), edge.color=eCols)
eCols<-rep("black", 152)
(eCols[tipEdges]="red")
plot(AnolisTree,show.tip.label=FALSE, type=c("radial"), edge.color=eCols)
tipEdges<-which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
tipEdges
eCols<-rep("black", 71)
(eCols[tipEdges]="red")
plot(AnolisTree,show.tip.label=FALSE, type=c("radial"), edge.color=eCols)
eCols<-rep("black", 160)
(eCols[tipEdges]="red")
plot(AnolisTree,show.tip.label=FALSE, type=c("radial"), edge.color=eCols)
eCols<-rep("black", 161)
(eCols[tipEdges]="red")
plot(AnolisTree,show.tip.label=FALSE, type=c("radial"), edge.color=eCols)
eCols<-rep("black", 162)
(eCols[tipEdges]="red")
plot(AnolisTree,show.tip.label=FALSE, type=c("radial"), edge.color=eCols)
plot(AnolisTree,show.tip.label=FALSE, type=c("fan"), edge.color=eCols)
plot(AnolisTree,show.tip.label=FALSE, type=c("radial"), edge.color=eCols)
for(i in 1:nrow(fossilData){
Node<-fastMRCA(tree, fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
names(fossilNodes)<-nodeN
}
for(i in 1:nrow(fossilData)){
Node<-fastMRCA(tree, fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
names(fossilNodes)<-nodeN
}
Ancestors_withFossils<-fastAnc(tree, svl, anc.states=fossilNodes, CI= TRUE, var=TRUE)
summary(X)
aictab(model.set, modnames=model.names)
#interaction of species and task has the best fit line so we will use that test to continue.
summary(interaction)
TukeyHSD(interaction)
TukeyHSD(X)
obj<-contMap(tree, svl, plot=F)
plot (obj, type="fan", legend=0.7*max(nodeHeights(tree)), sig=2, fsize=c(0.7, 0.9))
plot(tree, type="fan", lwd=2, show.tip.label=F)
tiplabels(pch=16, cex=0.25*svl[tree$tip.label])
nodelabels(pch=16, cex=0.25*Ancestors$ace)
dev.off()
dev.off()
obj<-contMap(tree, svl, plot=F)
plot (obj, type="fan", legend=0.7*max(nodeHeights(tree)), sig=2, fsize=c(0.7, 0.9))
fossilData<-data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_aliniger", "Anolis_aliniger", "Anolis_occultus", "Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
Ancestors_withFossils<-fastAnc(tree, svl, anc.states=fossilNodes, CI= TRUE, var=TRUE)
Ancestors_withFossils
dev.off()
dev.off()
fossilData<-data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_aliniger", "Anolis_aliniger", "Anolis_occultus", "Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
dev.off()
obj<-contMap(tree, svl, plot=F)
plot (obj, type="fan", legend=0.7*max(nodeHeights(tree)), sig=2, fsize=c(0.7, 0.9))
plot (obj, legend=0.7*max(nodeHeights(tree)), sig=2, fsize=c(0.7, 0.9))
#### Everything plot
X <- Data1$Task
repHC <- which(X == "HC")
repNB <- which(X == "NB")
repPF <- which(X == "PF")
Z <- rep(1, length(X))
Z[repHC] <- rnorm(length(repHC), 2, 0.05)
Z[repNB] <- rnorm(length(repNB), 3, 0.05)
Z[repPF] <- rnorm(length(repPF), 4, 0.05)
Colors <- rainbow(length(unique(Data1$Species)))
names(Colors) <- unique(Data$Species)
plot(X, Data1$Head.Width, pch=16, col=COlors[Data1$Species])
#### Everything plot
X <- Data1$Task
repHC <- which(X == "HC")
repNB <- which(X == "NB")
repPF <- which(X == "PF")
Z <- rep(1, length(X))
Z[repHC] <- rnorm(length(repHC), 2, 0.05)
Z[repNB] <- rnorm(length(repNB), 3, 0.05)
Z[repPF] <- rnorm(length(repPF), 4, 0.05)
Colors <- rainbow(length(unique(Data1$Species)))
names(Colors) <- unique(Data1$Species)
plot(X, Data1$Head.Width, pch=16, col=COlors[Data1$Species])
X
#### Everything plot
X <- Data1$Task
repHC <- which(X == "HC")
repNB <- which(X == "NB")
repPF <- which(X == "PF")
Z <- rep(1, length(X))
Z[repHC] <- rnorm(length(repHC), 2, 0.05)
Z[repNB] <- rnorm(length(repNB), 3, 0.05)
Z[repPF] <- rnorm(length(repPF), 4, 0.05)
Colors <- rainbow(length(unique(Data1$Species)))
names(Colors) <- unique(Data1$Species)
plot(Z, Data1$Head.Width, pch=16, col=COlors[Data1$Species])
#### Everything plot
X <- Data1$Task
repHC <- which(X == "HC")
repNB <- which(X == "NB")
repPF <- which(X == "PF")
Z <- rep(1, length(X))
Z[repHC] <- rnorm(length(repHC), 2, 0.05)
Z[repNB] <- rnorm(length(repNB), 3, 0.05)
Z[repPF] <- rnorm(length(repPF), 4, 0.05)
Colors <- rainbow(length(unique(Data1$Species)))
names(Colors) <- unique(Data1$Species)
plot(Z, Data1$Head.Width, pch=16, col=Colors[Data1$Species])
dev.off()
#### Everything plot
X <- Data1$Task
repHC <- which(X == "HC")
repNB <- which(X == "NB")
repPF <- which(X == "PF")
Z <- rep(1, length(X))
Z[repHC] <- rnorm(length(repHC), 2, 0.05)
Z[repNB] <- rnorm(length(repNB), 3, 0.05)
Z[repPF] <- rnorm(length(repPF), 4, 0.05)
Colors <- rainbow(length(unique(Data1$Species)))
names(Colors) <- unique(Data1$Species)
plot(Z, Data1$Head.Width, pch=16, col=Colors[Data1$Species])
plot(Z, Data1$Head.Width, pch=16, col=Colors[Data1$Species], xlab="", ylab="head width", xaxt="n")
axis(1, at=c(2,3,4), labels=c("HC", "NB", "PF"))
mtext(i, side=3, line=1.5)
VARtable
summary(X)
X <- aov(Head.Width ~ Species + Task, data=Data1)
summary(X)
#TukeyHSD(interaction)
TukeyHSD(X)
Dprob <- 0.5
Ekid <- 2
Pop <- c(rep(1,10),rep(2,10))
N <- c()
Na <- c()
Nb <- c()
ngen <- 50
for (i in 1:ngen)	{
N[i] <- length(which(Pop == 1))
Na[i] <- length(G1)
G1 <- rep(1, N[i])
PDeath <- runif(length(which(Pop == 2)))
G2 <- rep(2, Ekid * (length(which(PDeath > Dprob))))
Nb[i] <- length(G2)
Pop <- c(G1, G2)
cat(length(Pop), "\n")
}
par(mar=c(4,5,1,1), las=1, mgp=c(2.5, 0.75, 0), tck=-0.01)
plot(1:ngen, Nb, type="l", ylim=c(0, max(Nb)), xlab="generation", ylab="num. individuals")
for (i in 1:ngen)	{
N[i] <- length(which(Pop == 1))
Na[i] <- length(G1)
G1 <- rep(1, N[i])
PDeath <- runif(length(which(Pop == 2)))
G2 <- rep(2, Ekid * (length(which(PDeath > Dprob))))
Nb[i] <- length(G2)
Pop <- c(G1, G2)
cat(length(Pop), "\n")
}
library(animation)
setwd("C:\\Users\\jsm0036\\Dropbox\\Professional\\Courses\\c_Evolution\\c_Lectures\\2021")
saveGIF({
Dprob <- 0.5
Ekid <- 2
Pop <- c(rep(1,10),rep(2,10))
N <- c()
Na <- c()
Nb <- c()
ngen <- 50
for (i in 1:ngen)	{
N[i] <- length(which(Pop == 1))
Na[i] <- length(G1)
G1 <- rep(1, N[i])
PDeath <- runif(length(which(Pop == 2)))
G2 <- rep(2, Ekid * (length(which(PDeath > Dprob))))
Nb[i] <- length(G2)
Pop <- c(G1, G2)
par(mar=c(4,5,1,1), las=1, mgp=c(2.5, 0.75, 0), tck=-0.01)
plot(1:i, Nb, type="l", ylim=c(0, max(Nb)), xlab="generation", ylab="num. individuals", xlim=c(0, 50))
lines(1:i, Na, type="l", lty=2, col='red')
}
}, movie.name = "geomEx_02.gif", interval = 0.01, ani.width = 720, ani.height = 480)
setwd('C:\\Users\\Nicole\\Desktop\\Evolution\\Tasks\\Project')
Data1<-read.csv("AntData.csv")
#Data1
#Data2<-read.csv("AntData2.csv")
#Data2
#hypothesis
#Will a larger head width have an impact of what task the ants are assigned in different species
##My hypothesis is that there is a stronger size-task association between honeydew collectors and protein foragers or nest builders in different species of Formica ants.
VARtable <- data.frame(species=rep(NA, length=length(unique(Data1$Species))), HC=rep(NA, length=length(unique(Data1$Species))), NB=rep(NA, length=length(unique(Data1$Species))), PF=rep(NA, length=length(unique(Data1$Species))))
counter <- 1
for (i in unique(Data1$Species)){
Species <- Data1[which(Data1$Species == i),]
VARtable[counter,1] <- i
X <- Species$Task
repHC <- which(X == "HC")
repNB <- which(X == "NB")
repPF <- which(X == "PF")
Z <- rep(1, length(X))
Z[repHC] <- rnorm(length(repHC), 2, 0.05)
Z[repNB] <- rnorm(length(repNB), 3, 0.05)
Z[repPF] <- rnorm(length(repPF), 4, 0.05)
VARtable[counter,2:4] <- c(var(Species$Head.Width[repHC]), var(Species$Head.Width[repNB]), var(Species$Head.Width[repPF]))
counter <- counter+1
pdf(paste(i, ".pdf", sep=""))
par(las=1, mar=c(3,4,3,1), mgp=c(1.5, 0.5, 0), tck=-0.01)
plot(Z, Species$Head.Width, xlab="", ylab="head width", xaxt="n")
axis(1, at=c(2,3,4), labels=c("HC", "NB", "PF"))
mtext(i, side=3, line=1.5)
boxplot(Species$Head.Width~X, add=T, at=c(2,3,4), boxwex=0.25, col=c(rgb(0,1,0,0.5), rgb(0,0,1,0.5), rgb(1,0,0,0.5)))
dev.off()
}
X <- aov(Head.Width ~ Species + Task, data=Data1)
#interaction <- aov(Head.Width ~ Species * Task, data=Data1)
summary(X)
#summary(interaction)
#install.packages("AICcmodavg")
#library(AICcmodavg)
#model.set<-list(X, interaction)
#model.names<-c("X", "interaction")
#aictab(model.set, modnames=model.names)
#interaction of species and task has the best fit line so we will use that test to continue.
#summary(interaction)
#TukeyHSD(interaction)
TukeyHSD(X)
#### Everything plot
X <- Data1$Task
repHC <- which(X == "HC")
repNB <- which(X == "NB")
repPF <- which(X == "PF")
Z <- rep(1, length(X))
Z[repHC] <- rnorm(length(repHC), 2, 0.05)
Z[repNB] <- rnorm(length(repNB), 3, 0.05)
Z[repPF] <- rnorm(length(repPF), 4, 0.05)
Colors <- rainbow(length(unique(Data1$Species)))
names(Colors) <- unique(Data1$Species)
plot(Z, Data1$Head.Width, pch=16, col=Colors[Data1$Species], xlab="", ylab="head width", xaxt="n")
axis(1, at=c(2,3,4), labels=c("HC", "NB", "PF"))
mtext(i, side=3, line=1.5)
VARtable
setwd('C:\\Users\\Nicole\\Desktop\\Evolution\\Tasks\\Task_07')
library("ape")
library("phytools")
text.string<-
"(((((((cow, pig), whale), (bat, (lemur,human))), (robin, iguana)), coelacanth), (gold_fish, trout)), shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
#would the human be more closely related bc it hits 14 before having to go back to 13 which would have to happen for the shark.
vert.tree
#no branch lengeths
str(vert.tree)
tree<-read.tree(text="(((A, B), (C,D)), E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0, 6))
tipEdges<-which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths<-AnolisTree$edge.length
names(Lengths)<-AnolisTree$tip.label
names(Lengths)[which(Lengths==min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs<-sapply(AnolisTree$edge.length, round, digits = 2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
tipEdges<-which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
tipEdges
eCols<-rep("black", 162)
(eCols[tipEdges]="red")
plot(AnolisTree,show.tip.label=FALSE, type=c("radial"), edge.color=eCols)
#show.tip.label=FALSE = no tips,
#plotted as a circle radial.
##
Ntip(AnolisTree)
names(Lengths)[which(Lengths==min(Lengths))]
AnolisTree2<- drop.tip(AnolisTree, tip="Anolis_occultus")
Ntip(AnolisTree2)
ltt(AnolisTree2)
abline(0,1,lwd=2, col='red', lty=2)
#the line has a strong positive slope suggesting that their lineages increase with time
pdf("007_plot01.pdf")
ltt(AnolisTree2)
abline(0,1,lwd=2, col='red', lty=2)
fit.bd(AnolisTree2, rho=0.2)
dev.off()
library("phytools")
#what am i reading into R? where does the phylogeny come in to use the read.tree()?
#name it as somehting else and change "tree" to name of object.
# idk what to read into the read.tree function here? the last R assignment doesnt use read.tree ?###
?read.tree
tree<-AnolisTree
plot(tree, type="fan")
data<-read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)
Ntip(tree)
length(svl)
#nrow(data)
#ncol(data)
#has names and one row of data, so it has 2 columns (1 if you look at col, but wouldnt it be name and the value so 2? )and 82 rows.
svl<-setNames(data$svl, rownames(data))
Ancestors<-fastAnc(tree, svl, vars=TRUE, CI=TRUE)
#head(Ancestors)
#ncol(Ancestors)
#nrow(Ancestors)
#?ace
#??vars
#?CI
#Ancestors$CI95
par(mar=c(0.1, 0.1, 0.1, 0.1))
plot(tree, type="fan", lwd=2, show.tip.label=F)
tiplabels(pch=16, cex=0.25*svl[tree$tip.label])
nodelabels(pch=16, cex=0.25*Ancestors$ace)
dev.off()
obj<-contMap(tree, svl, plot=F)
plot (obj, legend=0.7*max(nodeHeights(tree)), sig=2, fsize=c(0.7, 0.9))
fossilData<-data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_aliniger", "Anolis_aliniger", "Anolis_occultus", "Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
for(i in 1:nrow(fossilData)){
Node<-fastMRCA(tree, fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
names(fossilNodes)<-nodeN
}
Ancestors_withFossils<-fastAnc(tree, svl, anc.states=fossilNodes, CI= TRUE, var=TRUE)
Ancestors_withFossils
#
setwd('C:\\Users\\Nicole\\Desktop\\Evolution\\Tasks\\Project')
Data1<-read.csv("AntData.csv")
#Data1
#Data2<-read.csv("AntData2.csv")
#Data2
#hypothesis
#Will a larger head width have an impact of what task the ants are assigned in different species
##My hypothesis is that there is a stronger size-task association between honeydew collectors and protein foragers or nest builders in different species of Formica ants.
VARtable <- data.frame(species=rep(NA, length=length(unique(Data1$Species))), HC=rep(NA, length=length(unique(Data1$Species))), NB=rep(NA, length=length(unique(Data1$Species))), PF=rep(NA, length=length(unique(Data1$Species))))
counter <- 1
for (i in unique(Data1$Species)){
Species <- Data1[which(Data1$Species == i),]
VARtable[counter,1] <- i
X <- Species$Task
repHC <- which(X == "HC")
repNB <- which(X == "NB")
repPF <- which(X == "PF")
Z <- rep(1, length(X))
Z[repHC] <- rnorm(length(repHC), 2, 0.05)
Z[repNB] <- rnorm(length(repNB), 3, 0.05)
Z[repPF] <- rnorm(length(repPF), 4, 0.05)
VARtable[counter,2:4] <- c(var(Species$Head.Width[repHC]), var(Species$Head.Width[repNB]), var(Species$Head.Width[repPF]))
counter <- counter+1
pdf(paste(i, ".pdf", sep=""))
par(las=1, mar=c(3,4,3,1), mgp=c(1.5, 0.5, 0), tck=-0.01)
plot(Z, Species$Head.Width, xlab="", ylab="head width", xaxt="n")
axis(1, at=c(2,3,4), labels=c("HC", "NB", "PF"))
mtext(i, side=3, line=1.5)
boxplot(Species$Head.Width~X, add=T, at=c(2,3,4), boxwex=0.25, col=c(rgb(0,1,0,0.5), rgb(0,0,1,0.5), rgb(1,0,0,0.5)))
dev.off()
}
X <- aov(Head.Width ~ Species + Task, data=Data1)
#interaction <- aov(Head.Width ~ Species * Task, data=Data1)
summary(X)
#summary(interaction)
#install.packages("AICcmodavg")
#library(AICcmodavg)
#model.set<-list(X, interaction)
#model.names<-c("X", "interaction")
#aictab(model.set, modnames=model.names)
#interaction of species and task has the best fit line so we will use that test to continue.
#summary(interaction)
#TukeyHSD(interaction)
TukeyHSD(X)
#### Everything plot
X <- Data1$Task
repHC <- which(X == "HC")
repNB <- which(X == "NB")
repPF <- which(X == "PF")
Z <- rep(1, length(X))
Z[repHC] <- rnorm(length(repHC), 2, 0.05)
Z[repNB] <- rnorm(length(repNB), 3, 0.05)
Z[repPF] <- rnorm(length(repPF), 4, 0.05)
Colors <- rainbow(length(unique(Data1$Species)))
names(Colors) <- unique(Data1$Species)
plot(Z, Data1$Head.Width, pch=16, col=Colors[Data1$Species], xlab="", ylab="head width", xaxt="n")
axis(1, at=c(2,3,4), labels=c("HC", "NB", "PF"))
mtext(i, side=3, line=1.5)
VARtable
head(Data1)
SpVars <- tapply(Data1[,"Head.Width"], Data1[,"Species"], var, na.rm=T)
SpVars
Z
SpTaskCode <- sapply(1:nrow(Data1), function(x) paste(Data1[x,"Species"], Data1[x,"Task"], collapse="."))
SpTaskCode
SpTaskCode <- sapply(1:nrow(Data1), function(x) paste(Data1[x,"Species"], Data1[x,"Task"], collapse="\."))
SpTaskCode <- sapply(1:nrow(Data1), function(x) paste(Data1[x,"Species"], Data1[x,"Task"], collapse="\\."))
SpTaskCode
SpTaskCode <- sapply(1:nrow(Data1), function(x) paste(Data1[x,"Species"], Data1[x,"Task"], collapse="\_"))
SpTaskCode <- sapply(1:nrow(Data1), function(x) paste(Data1[x,"Species"], Data1[x,"Task"], collapse="\\_"))
SpTaskCode
SpTaskCode <- sapply(1:nrow(Data1), function(x) paste(Data1[x,"Species"], Data1[x,"Task"], collapse="zzz"))
SpTaskCode
SpTaskCode <- sapply(1:nrow(Data1), function(x) paste(Data1[x,"Species"], Data1[x,"Task"], sep="."))
SpTaskCode
SpTaskMeans <- tapply(Data1[,"Head.Width"], SpTaskCode, mean, na.rm=T)
SpTaskMeans
X <- aov(Head.Width ~ Species + Task, data=Data1)
summary(X)
#TukeyHSD(interaction)
TukeyHSD(X)
summary(X)
#TukeyHSD(interaction)
TukeyHSD(X)
setwd('C:\\Users\\Nicole\\Desktop\\Evolution\\Tasks\\Project')
Data1<-read.csv("AntData.csv")
#Data1
#Data2<-read.csv("AntData2.csv")
#Data2
#hypothesis
#Will a larger head width have an impact of what task the ants are assigned in different species
##My hypothesis is that there is a stronger size-task association between honeydew collectors and protein foragers or nest builders in different species of Formica ants.
VARtable <- data.frame(species=rep(NA, length=length(unique(Data1$Species))), HC=rep(NA, length=length(unique(Data1$Species))), NB=rep(NA, length=length(unique(Data1$Species))), PF=rep(NA, length=length(unique(Data1$Species))))
counter <- 1
for (i in unique(Data1$Species)){
Species <- Data1[which(Data1$Species == i),]
VARtable[counter,1] <- i
X <- Species$Task
repHC <- which(X == "HC")
repNB <- which(X == "NB")
repPF <- which(X == "PF")
Z <- rep(1, length(X))
Z[repHC] <- rnorm(length(repHC), 2, 0.05)
Z[repNB] <- rnorm(length(repNB), 3, 0.05)
Z[repPF] <- rnorm(length(repPF), 4, 0.05)
VARtable[counter,2:4] <- c(var(Species$Head.Width[repHC]), var(Species$Head.Width[repNB]), var(Species$Head.Width[repPF]))
counter <- counter+1
pdf(paste(i, ".pdf", sep=""))
par(las=1, mar=c(3,4,3,1), mgp=c(1.5, 0.5, 0), tck=-0.01)
plot(Z, Species$Head.Width, xlab="", ylab="head width", xaxt="n")
axis(1, at=c(2,3,4), labels=c("HC", "NB", "PF"))
mtext(i, side=3, line=1.5)
boxplot(Species$Head.Width~X, add=T, at=c(2,3,4), boxwex=0.25, col=c(rgb(0,1,0,0.5), rgb(0,0,1,0.5), rgb(1,0,0,0.5)))
dev.off()
}
X <- aov(Head.Width ~ Species + Task, data=Data1)
#interaction <- aov(Head.Width ~ Species * Task, data=Data1)
summary(X)
#summary(interaction)
#install.packages("AICcmodavg")
#library(AICcmodavg)
#model.set<-list(X, interaction)
#model.names<-c("X", "interaction")
#aictab(model.set, modnames=model.names)
#interaction of species and task has the best fit line so we will use that test to continue.
#summary(interaction)
#TukeyHSD(interaction)
TukeyHSD(X)
#### Everything plot
X <- Data1$Task
repHC <- which(X == "HC")
repNB <- which(X == "NB")
repPF <- which(X == "PF")
Z <- rep(1, length(X))
Z[repHC] <- rnorm(length(repHC), 2, 0.05)
Z[repNB] <- rnorm(length(repNB), 3, 0.05)
Z[repPF] <- rnorm(length(repPF), 4, 0.05)
Colors <- rainbow(length(unique(Data1$Species)))
names(Colors) <- unique(Data1$Species)
plot(Z, Data1$Head.Width, pch=16, col=Colors[Data1$Species], xlab="", ylab="head width", xaxt="n")
axis(1, at=c(2,3,4), labels=c("HC", "NB", "PF"))
mtext(i, side=3, line=1.5)
VARtable
SpTaskCode <- sapply(1:nrow(Data1), function(x) paste(Data1[x,"Species"], Data1[x,"Task"], sep="."))
SpVars <- tapply(Data1[,"Head.Width"], Data1[,"Species"], var, na.rm=T)
SpTaskMeans <- tapply(Data1[,"Head.Width"], SpTaskCode, mean, na.rm=T)
