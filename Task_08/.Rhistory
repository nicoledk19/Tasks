contributors()
demo()
help.start()
library(swirl)
swirl()
swirl()
install.packages("swirl")
library(swirl)
install.packages("swirl")
swirl()
library(swirl)
swirl()
swirl()
swirl()
install.packages("swirl")
install.packages("swirl")
library(swirl)
library(swirl)
swirl()
swirl()
install.packages("swirl")
download to desktop
install.packages("swirl")
library(swirl)
swirl()
read.csv?
?
read.csv
?read.csv
read.csv("data for ants", header = TRUE, sep = ",", quote = "\"")
setwd('C:\\Users\\Nicole\\Desktop\\Evolution\\Tasks\\Task_08')
library(phytools)
list?
?list
list?
?list
trees<-list()
births<-c()
Fractions<-c()
for(i in 1:100){
}
i<-runif(births)
births[[i]]<-runif()
births[[i]]<-runif(i)
births[[i]]<-runif(1)
births[[i]]<-runif(1, min=1, max=100)
Fractions[[i]]<-runif(1, min=1, max=100)
pbtree?
?pbtree
trees[[i]]<-pbtree(b=i, d=i*Fractions[i])
for(i in 1:100){
births[[i]]<-runif(1, min=1, max=100)
Fractions[[i]]<-runif(1, min=1, max=100)
trees[[i]]<-pbtree(births[i], births[i]*Fractions[i], n=100)
}
for(i in 1:100){
births[i]<-runif(1, min=1, max=100)
Fractions[i]<-runif(1, min=1, max=100)
trees[[i]]<-pbtree(births[i], births[i]*Fractions[i], n=100)
}
for(i in 1:100){
births[[i]]<-runif(1, min=1, max=100)
Fractions[[i]]<-runif(1, min=1, max=100)
trees[[i]]<-pbtree(births[i], births[i]*Fractions[i], n=100)
}
for(i in 1:100){
births[i]<-runif(1, min=1, max=100)
Fractions[i]<-runif(1, min=1, max=100)
trees[[i]]<-pbtree(births[i], births[i]*Fractions[i], n=100)
}
for(i in 1:100){
births[i]<-runif(1, min=1, max=100)
Fractions[i]<-runif(1, min=1, max=100)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
}
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
}
births<-vector()
Fractions<-vector()
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
}
plot(trees[[i]])
tiplog<-log(sapply(trees, Ntip))
tiplog
#do i need to set min and max to 1 and 100?
#do I need to somehow make it to where randomly selecting the number also accounts for the first randomly selected one or do i just select another one?
trees
Fractions
nd<-(births-Fractions)
nd
plot(nd, tiplog)
#do i need to set min and max to 1 and 100?
#do I need to somehow make it to where randomly selecting the number also accounts for the first randomly selected one or do i just select another one?
trees
nd<-(births-trees)
nd<-(births-Fractions)
nd
nd<-(births-(births*Fractions))
nd
plot(trees[[i]])
tiplog<-log(sapply(trees, Ntip))
tiplog
plot(nd, tiplog)
exrate<-(births*Fractions)
nd<-(births-exrate)
nd
plot(trees[[i]])
tiplog<-log(sapply(trees, Ntip))
tiplog
plot(nd, tiplog)
Fractions
tiplog
#do i need to set min and max to 1 and 100?
#do I need to somehow make it to where randomly selecting the number also accounts for the first randomly selected one or do i just select another one?
trees
?pbtree
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
}
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
}
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
}
#do i need to set min and max to 1 and 100?
#do I need to somehow make it to where randomly selecting the number also accounts for the first randomly selected one or do i just select another one?
trees
Fractions
exrate<-(births*Fractions)
nd<-(births-exrate)
nd
plot(trees[[i]])
tiplog<-log(sapply(trees, Ntip))
plot(trees[[i]])
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
}
#do i need to set min and max to 1 and 100?
#do I need to somehow make it to where randomly selecting the number also accounts for the first randomly selected one or do i just select another one?
trees
plot(trees[[i]])
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
}
plot(trees[[i]])
plot(trees)
plot(trees[i])
plot(trees[[i]])
exrate<-births*Fractions
nd<-births-Fractions
plot(nd, births)
setwd('C:\\Users\\Nicole\\Desktop\\Evolution\\Tasks\\Task_08')
library(phytools)
trees<-list()
births<-vector()
Fractions<-vector()
exrate<-births*Fractions
nd<-births-Fractions
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
plot(nd, births)
}
length(nd)
length(births)#do i need to set min and max to 1 and 100?
nd<-births-exrate
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
plot(nd, births)
}
length(nd)
length(log(births)
length(log(births))
#do i need to set min and max to 1 and 100?
#do I need to somehow make it to where randomly selecting the number also accounts for the first randomly selected one or do i just select another one?
trees
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
}
#do i need to set min and max to 1 and 100?
#do I need to somehow make it to where randomly selecting the number also accounts for the first randomly selected one or do i just select another one?
trees
exrate<-(births*Fractions)
exrate
nd<-(births-exrate)
nd
length(nd)
tiplog<-log(sapply(trees, Ntip))
tiplog
plot(nd, tiplog)
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(births[i], births[i] * Fractions[i], n=100)
exrate<-births*Fractions
nd<-births-exrate
plot(nd, births)
}
trees
